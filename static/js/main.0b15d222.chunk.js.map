{"version":3,"sources":["components/Homepage.js","components/AddCoins.js","App.js","serviceWorker.js","index.js"],"names":["Homepage","props","setFrom","event","setState","coinFrom","target","value","setTo","coinTo","start","from","to","amount","state","i","coins","length","type","result","toFixed","alert","saveEx","enableStart","showExList","show","history","map","e","style","border","padding","borderRadius","width","margin","onClick","removeExchange","remove","this","min","onChange","Number","disabled","Component","AddCoins","SaveCoin","validCoinType","coinType","save","coinVal","enableAdd","placeholder","App","coinValue","coinsCopy","somethingChanged","saveExchange","newHistoryArr","y","push","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.0b15d222.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default class Homepage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            coinFrom:'',\r\n            coinTo:'',\r\n            amount:0,\r\n            show:false\r\n        }\r\n    }\r\n    setFrom=(event)=>{\r\n        this.setState({coinFrom: event.target.value})\r\n    }\r\n    setTo=(event)=>{\r\n        this.setState({coinTo: event.target.value})\r\n    }\r\n\r\n    start=()=>{\r\n        let amount = this.state.amount;\r\n        let from;\r\n        let to;\r\n        for(let i=0;i<this.props.coins.length; i++){\r\n            if(this.props.coins[i].type == this.state.coinFrom){\r\n                from = this.props.coins[i].value;\r\n                break;\r\n            }\r\n        }\r\n        for(let i=0;i<this.props.coins.length; i++){\r\n            if(this.props.coins[i].type == this.state.coinTo){\r\n                to = this.props.coins[i].value;\r\n                break;\r\n            }\r\n        }\r\n \r\n        let result = (((amount*from)/to).toFixed(2));\r\n        alert(result);\r\n        this.props.saveEx(amount,this.state.coinFrom,this.state.coinTo,result);\r\n    }\r\n    enableStart=()=>{\r\n        let amount = this.state.amount;\r\n        let from = this.state.coinFrom;\r\n        let to = this.state.coinTo;\r\n        if(amount>0 && from.length>0 && to.length>0){\r\n            return('');\r\n        }\r\n        else{\r\n            return('disabled');\r\n\r\n        }\r\n    }\r\n\r\n    showExList=()=>{\r\n        if(this.state.show==true){\r\n            return(\r\n                <div>\r\n                    {this.props.history.map((e,i)=>{\r\n                        return(\r\n                            <div style={{border:'1px solid black', padding:'5px', borderRadius:'25px', width:'40%',margin:'5px auto'}}>\r\n                                <p># {i+1}</p>\r\n                                <p>From {e.coinFrom} To {e.coinTo}</p>\r\n                                <p>{e.amount} = {e.result}</p>\r\n                                <button onClick={()=>{this.removeExchange(i)}}>X</button>\r\n                            </div>\r\n\r\n                    )\r\n                    })}\r\n                </div>\r\n            )            \r\n        }\r\n    }\r\n\r\n    removeExchange=(i)=>{\r\n        this.props.remove(i);\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Exchange</h1>\r\n                From: \r\n                <select onClick={this.setFrom}>\r\n                    <option value=''>Type</option>\r\n                    {this.props.coins.map((e,i)=>{\r\n                    return <option value={e.type}>{e.type}</option>\r\n                    })}\r\n                </select>\r\n\r\n                <input type='number' min='0' onChange={(e)=>{this.setState({amount: Number(e.target.value)})}}></input>\r\n                <br/>\r\n                To: \r\n                <select onClick={this.setTo}>\r\n                    <option value=''>Type</option>\r\n                    {this.props.coins.map((e,i)=>{\r\n                    return <option value={e.type}>{e.type}</option>\r\n                    })}\r\n                </select><br/>\r\n                <button onClick={this.start} disabled={this.enableStart()}>Start</button>\r\n\r\n                <br/>\r\n                <br/>\r\n                <Link to='/addcoins'><button>Update</button></Link>\r\n                <Link to='www.facebook.com'><button>Share on FACEBOOK</button></Link>\r\n                <button onClick={()=>{this.setState({show:!this.state.show})}}>View your exchange list</button>\r\n                {this.showExList()}\r\n\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default class AddCoins extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    \r\n        this.state = {\r\n            coinType: '',\r\n            coinVal: 0\r\n             \r\n        }\r\n    }\r\n    \r\n    SaveCoin=()=>{\r\n        let validCoinType=true;\r\n        let coinType = this.state.coinType;\r\n        for(let i=0; i<coinType.length; i++){\r\n            if((coinType[i]>='a' && coinType[i]<='z') || (coinType[i]>='A' && coinType[i]<='Z')){\r\n                continue;\r\n            }else{\r\n                validCoinType=false;\r\n                alert('Type must contain english letter only, value must be bigger than 0');\r\n                break;\r\n            }\r\n        }\r\n        if(validCoinType == true){\r\n        this.props.save(this.state.coinType, this.state.coinVal);\r\n        }\r\n    }\r\n\r\n    enableAdd=()=>{\r\n        let type = this.state.coinType\r\n        let val = this.state.coinVal;\r\n        if(val>0 && type.length>0){\r\n            return('');\r\n        }\r\n        else{\r\n            return('disabled');\r\n\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>UPDATE</h3>\r\n                <table style={{border:'1px solid black', margin: '0 auto'}} >\r\n                        <thead>\r\n                            <th style={{border:'1px solid black'}}>Type</th>\r\n                            <th style={{border:'1px solid black'}}>Value</th>\r\n                        </thead>\r\n                        <tbody>\r\n                        {this.props.coins.map((e)=>{\r\n                            return(\r\n                                <tr>\r\n                                <td style={{border:'1px solid black'}}>{e.type}</td>\r\n                                <td style={{border:'1px solid black'}}>{e.value}</td>\r\n                                </tr>\r\n                            )\r\n                        })}\r\n                        </tbody>\r\n                    </table> \r\n\r\n\r\n                Type: <input onChange={(e)=>{this.setState({coinType: e.target.value})}} type=\"text\" placeholder=\"Coin Type\"></input><br/>\r\n                New Value: <input onChange={(e)=>{this.setState({coinVal: e.target.value})}} type=\"number\" placeholder=\"Coin Value\"></input><br/>\r\n\r\n\r\n                <Link to='/'><button>Back</button></Link>\r\n                <button onClick={this.SaveCoin} disabled={this.enableAdd()}>Add</button>\r\n\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\nimport {BrowserRouter as Router,Switch,Route,Link} from 'react-router-dom';\nimport './App.css';\nimport Homepage from './components/Homepage.js';\nimport AddCoins from './components/AddCoins';\n\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n      coins:[{type:'dollar',value:4},{type:'euro',value:5},{type:'shekel',value:1}],\n      history:[]\n       \n    }\n  }\n\n  SaveCoin=(coinType,coinValue)=>{\n    let coinsCopy = this.state.coins;\n    let somethingChanged = false;\n    for(let i=0; i<coinsCopy.length; i++){\n      if(coinsCopy[i].type == coinType){\n        coinsCopy[i].value = coinValue;\n        somethingChanged = true;\n        break;\n      }\n    }\n    if(somethingChanged == true){\n      this.setState({coins: coinsCopy});\n    }\n    else{\n    this.setState({coins: [...this.state.coins,{type: coinType, value: coinValue}]});\n    }\n  }\n  \n  saveExchange=(amount, coinFrom, coinTo, result)=>{\n    this.setState({history: [...this.state.history,{amount:amount, coinFrom:coinFrom, coinTo:coinTo, result:result}]})\n  }\n\n  removeExchange=(i)=>{\n    // alert(i);\n    let newHistoryArr = [];\n    // let old = this.state.history;\n    for(let y=0;y<this.state.history.length; y++){\n      if (y!=i){\n        newHistoryArr.push(this.state.history[y]);\n      }\n    }\n    this.setState({history: newHistoryArr});\n  }\n\n  render() {\n    return (\n      <div>\n          <Router>\n            <Switch>\n                <Route exact path='/' component={()=>{return <Homepage remove={this.removeExchange} coins={this.state.coins} saveEx={this.saveExchange} history={this.state.history}/>}}/>\n                <Route exact path='/addCoins' component={()=>{return <AddCoins coins={this.state.coins} save={this.SaveCoin}/>}}/>\n            </Switch>\n          </Router>\n\n        \n      </div>\n    )\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}